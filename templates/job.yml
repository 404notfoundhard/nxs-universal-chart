{{- $j := dict -}}
{{- if .Values.jobs -}}
{{- if kindIs "string" .Values.jobs -}}
{{- $j = fromYaml .Values.jobs -}}
{{- else if kindIs "map" .Values.jobs -}}
{{- $j = .Values.jobs -}}
{{- end -}}
{{- else if .Values.jobsFileName -}}
{{- $j = fromYaml (.Files.Get .Values.jobsFileName) -}}
{{- end -}}
{{- $general := $.Values.jobsGeneral -}}
{{- range $j.jobs }}
{{- $job := . -}}
{{- $jobName := include "helpers.app.fullname" (dict "name" .name "context" $) }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $jobName }}
  namespace: {{ $.Release.Namespace | quote }}
  labels:
  {{- include "helpers.app.labels" $ | nindent 4 }}
  {{- if .labels }}
  {{- include "helpers.tplvalues.render" (dict "value" .labels "context" $) | nindent 4 }}
  {{- end }}
  {{- if $.Values.generic.labels }}
  {{- include "helpers.tplvalues.render" (dict "value" $.Values.generic.labels "context" $) | nindent 4 }}
  {{- end }}
  annotations:
  {{- if $.Values.generic.annotations }}
  {{- include "helpers.tplvalues.render" (dict "value" $.Values.generic.annotations "context" $) | nindent 4 }}
  {{- end }}
  {{- if .annotations }}
  {{- include "helpers.tplvalues.render" (dict "value" .annotations "context" $) | nindent 4 }}
  {{- end }}
spec:
  {{- if .parallelism }}
  parallelism: {{ .parallelism }}
  {{- else if $general.parallelism }}
  parallelism: {{ $general.parallelism }}
  {{- end }}
  {{- if .completions }}
  completions: {{ .completions }}
  {{- else if $general.completions }}
  completions: {{ $general.completions }}
  {{- end }}
  {{- if .activeDeadlineSeconds }}
  activeDeadlineSeconds: {{ .activeDeadlineSeconds }}
  {{- else if $general.activeDeadlineSeconds }}
  activeDeadlineSeconds: {{ $general.activeDeadlineSeconds }}
  {{- end }}
  {{- if .backoffLimit }}
  backoffLimit: {{ .backoffLimit }}
  {{- else if $general.backoffLimit }}
  backoffLimit: {{ $general.backoffLimit }}
  {{- end }}
  {{- if .ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ .ttlSecondsAfterFinished }}
  {{- else if $general.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ $general.ttlSecondsAfterFinished }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- if .extraSelectorLabels }}
        {{- include "helpers.tplvalues.render" (dict "value" .extraSelectorLabels "context" $) | nindent 8 }}
        {{- else if $.Values.generic.extraSelectorLabels }}
        {{- include "helpers.tplvalues.render" (dict "value" $.Values.generic.extraSelectorLabels "context" $) | nindent 8 }}
        {{- end }}
        {{- if .podLabels }}
        {{- include "helpers.tplvalues.render" (dict "value" .podLabels "context" $) | nindent 8 }}
        {{- end }}
        {{- if $.Values.generic.podLabels }}
        {{- include "helpers.tplvalues.render" ( dict "value" $.Values.generic.podLabels "context" $ ) | nindent 8 }}
        {{- end }}
      annotations:
        {{- if $.Values.generic.podAnnotations }}
        {{- include "helpers.tplvalues.render" ( dict "value" $.Values.generic.podAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .podAnnotations }}
        {{- include "helpers.tplvalues.render" ( dict "value" .podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- if .serviceAccountName }}
      serviceAccountName: {{ .serviceAccountName }}
      {{- else if $.Values.generic.serviceAccountName }}
      serviceAccountName: {{ $.Values.generic.serviceAccountName }}
      {{- end }}
      {{- if .hostAliases }}
      hostAliases: {{- include "helpers.tplvalues.render" (dict "value" .hostAliases "context" $) | nindent 8 }}
      {{- else if $.Values.generic.hostAliases }}
      hostAliases: {{- include "helpers.tplvalues.render" (dict "value" $.Values.generic.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .affinity }}
      affinity: {{- include "helpers.tplvalues.render" ( dict "value" .affinity "context" $) | nindent 8 }}
      {{- else if $general.affinity }}
      affinity: {{- include "helpers.tplvalues.render" ( dict "value" $general.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        nodeAffinity: {{- include "helpers.affinities.nodes" (dict "type" $.Values.nodeAffinityPreset.type "key" $.Values.nodeAffinityPreset.key "values" $.Values.nodeAffinityPreset.values) | nindent 10 }}
        podAffinity: {{- include "helpers.affinities.pods" (dict "type" $.Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "helpers.affinities.pods" (dict "type" $.Values.podAntiAffinityPreset "context" $) | nindent 10 }}
      {{- end }}
      {{- with .podSecurityContext }}
      securityContext: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) nindent 6 }}
      {{- end }}
      {{- if .dnsPolicy }}
      dnsPolicy: {{ .dnsPolicy }}
      {{- else if $.Values.generic.dnsPolicy }}
      dnsPolicy: {{ $.Values.generic.dnsPolicy }}
      {{- end }}
      {{- with .nodeSelector }}
      nodeSelector: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 6 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 6 }}
      {{- end }}
      {{ if or $.Values.generic.imagePullSecrets .imagePullSecrets }}
      imagePullSecrets:
        {{- range $sName, $v := $.Values.generic.imagePullSecrets }}
        - name: {{ $sName }}
        {{- end }}
        {{- if .imagePullSecrets }}
        {{- include "helpers.tplvalues.render" ( dict "value" .imagePullSecrets "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .initContainers}}
      initContainers:
      {{- range . }}
      - name: {{ .name | default $jobName }}
        image: {{ .image | default $.Values.generic.defaultImage }}:{{ .imageTag | default  $.Values.generic.defaultImageTag }}
        imagePullPolicy: {{ .imagePullPolicy | default "IfNotPresent" }}
        {{- with .containerSecurityContext }}
        securityContext: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        {{- if and .args (not $job.max_duration) }}
        args: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 14 }}
        {{- end }}
        {{- with .command }}
        {{- if typeIs "string" . }}
        {{- if $job.max_duration }}
        command: ["/bin/bash"]
        args: ["-c", "/usr/bin/timeout --preserve-status {{ $job.max_duration }} {{ . }}; exit_status=$?; if [[ $exit_status -eq 143 ]]; then echo 'Max execution exceeded after {{ $job.max_duration }} seconds (Added by task #91828)!'; fi; exit $exit_status"]
        {{- else }}
        command: {{ printf "[\"%s\"]" (join ("\", \"") (without (splitList " " . ) "" )) }}
        {{- end }}
        {{- else -}}
        command: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 14 }}
        {{- end }}
        {{- end }}
        env:
        {{- include "helpers.secrets.include" $ | nindent 8 }}
        {{- with .env }}
        {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        {{- with .envFrom }}
        envFrom: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        {{- with .ports }}
        ports: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        {{- $volMounts := list -}}
        {{- if .volumeMounts -}}
        {{- $volMounts = .volumeMounts -}}
        {{- else if $general.extraVolumeMounts -}}
        {{- $volMounts = $general.extraVolumeMounts -}}
        {{- else if $.Values.generic.extraVolumeMounts -}}
        {{- $volMounts = $.Values.generic.extraVolumeMounts -}}
        {{- end -}}
        {{- if not (empty $volMounts) }}
        volumeMounts:
          {{- range $volMounts }}
          {{- if .extraFilesDirName }}
        - name: {{ include "helpers.app.fullname" (dict "name" (.extraFilesDirName | replace "_" "-" | replace "." "-") "context" $) }}
          {{- else if .pvcName }}
        - name: {{ include "helpers.app.fullname" (dict "name" (.pvcName | replace "_" "-") "context" $) }}
          {{- else }}
        - name: {{ .name }}
          {{- end }}
          {{- with .subPath }}
          subPath: {{ include "helpers.tplvalues.render" ( dict "value" . "context" $) }}
          {{- end }}
          mountPath: {{ .mountPath }}
          {{- with .readOnly }}
          readOnly: {{ include "helpers.tplvalues.render" ( dict "value" . "context" $) }}
          {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- $containers := list -}}
      {{- if .containers -}}{{- $containers = .containers -}}{{- else -}}{{- $containers = append list . -}}{{- end }}
      containers:
      {{- range $containers }}
      - name: {{ .name | default $jobName }}
        image: {{ .image | default $.Values.generic.defaultImage }}:{{ .imageTag | default  $.Values.generic.defaultImageTag }}
        imagePullPolicy: {{ .imagePullPolicy | default "IfNotPresent" }}
        {{- with .containerSecurityContext }}
        securityContext: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        env:
        {{- include "helpers.secrets.include" $ | nindent 8 }}
        {{- with .env }}
        {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        {{- with .envFrom }}
        envFrom: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        {{- if and .args (not $job.max_duration) }}
        args: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 14 }}
        {{- end }}
        {{- with .command }}
        {{- if typeIs "string" . }}
        {{- if $job.max_duration }}
        command: ["/bin/bash"]
        args: ["-c", "/usr/bin/timeout --preserve-status {{ $job.max_duration }} {{ . }}; exit_status=$?; if [[ $exit_status -eq 143 ]]; then echo 'Max execution exceeded after {{ $job.max_duration }} seconds (Added by task #91828)!'; fi; exit $exit_status"]
        {{- else }}
        command: {{ printf "[\"%s\"]" (join ("\", \"") (without (splitList " " . ) "" )) }}
        {{- end }}
        {{- else -}}
        command: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 14 }}
        {{- end }}
        {{- end }}
        {{- with .lifecycle }}
        lifecycle: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        {{- with .livenessProbe }}
        livenessProbe: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        {{- with .readinessProbe }}
        readinessProbe: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        {{- with .resources }}
        resources: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        {{- $volMounts := list -}}
        {{- if .volumeMounts -}}
        {{- $volMounts = .volumeMounts -}}
        {{- else if $general.extraVolumeMounts -}}
        {{- $volMounts = $general.extraVolumeMounts -}}
        {{- else if $.Values.generic.extraVolumeMounts -}}
        {{- $volMounts = $.Values.generic.extraVolumeMounts -}}
        {{- end -}}
        {{- if not (empty $volMounts) }}
        volumeMounts:
          {{- range $volMounts }}
          {{- if .extraFilesDirName }}
        - name: {{ include "helpers.app.fullname" (dict "name" (.extraFilesDirName | replace "_" "-" | replace "." "-") "context" $) }}
          {{- else if .pvcName }}
        - name: {{ include "helpers.app.fullname" (dict "name" (.pvcName | replace "_" "-") "context" $) }}
          {{- else }}
        - name: {{ .name }}
          {{- end }}
          {{- with .subPath }}
          subPath: {{ include "helpers.tplvalues.render" ( dict "value" . "context" $) }}
          {{- end }}
          mountPath: {{ .mountPath }}
          {{- with .readOnly }}
          readOnly: {{ include "helpers.tplvalues.render" ( dict "value" . "context" $) }}
          {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
      volumes:
      {{- if $.Files.Glob ("extra-files/config/**") }}
      {{- range $subPath := splitList "$" (include "helpers.configFiles.subPaths" $)}}
      {{- $name := include "helpers.app.fullname" (dict "name" ($subPath | replace "_" "-" | replace "." "-") "context" $) }}
      - name: {{ $name }}
        configMap:
          name: {{ $name }}
      {{- end }}
      {{- end }}
      {{- if $.Files.Glob ("extra-files/secret/**") }}
      {{- range $subPath := splitList "$" (include "helpers.configFiles.subPaths" $)}}
      {{- $name := include "helpers.app.fullname" (dict "name" ($subPath | replace "_" "-" | replace "." "-") "context" $) }}
      - name: {{ $name }}
        secret:
          secretName: {{ $name }}
      {{- end }}
      {{- end }}
      {{- if .volumes }}
      {{- range .volumes }}
      {{- if eq .type "configMap" }}
      - name: {{ include "helpers.app.fullname" (dict "name" .name "context" $) }}
        configMap:
          name: {{ include "helpers.app.fullname" (dict "name" .name "context" $) }}
          {{- with .items }}
          items: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
          {{- end }}
      {{- end }}
      {{- if eq .type "secret" }}
      - name: {{ include "helpers.app.fullname" (dict "name" .name "context" $) }}
        secret:
          secretName: {{ include "helpers.app.fullname" (dict "name" .name "context" $) }}
          {{- with .items }}
          items: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
          {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- range $.Values.pvcs }}
      {{- $claimName := "" -}}
      {{- if .nameOverride -}}{{- $claimName = .nameOverride -}}{{- else -}}{{- $claimName = include "helpers.app.fullname" (dict "name" .name "context" $) -}}{{- end }}
      - name: {{ $claimName }}
        persistentVolumeClaim:
          claimName: {{ $claimName }}
      {{- end }}
      {{- if .extraVolumes }}
      {{- include "helpers.tplvalues.render" ( dict "value" .extraVolumes "context" $) | nindent 6 }}
      {{- else if $general.extraVolumes }}
      {{- include "helpers.tplvalues.render" ( dict "value" $general.extraVolumes "context" $) | nindent 6 }}
      {{- else if $.Values.generic.extraVolumes }}
      {{- include "helpers.tplvalues.render" ( dict "value" $.Values.generic.extraVolumes "context" $) | nindent 6 }}
      {{- end }}
      restartPolicy: {{ .restartPolicy | default "Never" }}
{{- end }}
