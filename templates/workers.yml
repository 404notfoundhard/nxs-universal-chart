{{- $workers := dict -}}
{{- if .Values.workers -}}
{{- if kindIs "string" .Values.workers -}}
{{- $workers = fromYaml .Values.workers -}}
{{- else if kindIs "map" .Values.workers -}}
{{- $workers = .Values.workers -}}
{{- end -}}
{{- else if .Values.workersFileName -}}
{{- $workers = fromYaml (.Files.Get .Values.workersFileName) -}}
{{- end -}}
{{- $general := $.Values.workersGeneral -}}
{{- range $workers.workers -}}
{{- if not (.disabled | default false) }}
---
apiVersion: {{ include "helpers.capabilities.deployment.apiVersion" $ }}
kind: Deployment
metadata:
  name: {{ include "helpers.app.fullname" (dict "name" .name "context" $) }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "helpers.app.labels" $ | nindent 4 }}
    {{- if .labels }}
    {{- include "helpers.tplvalues.render" (dict "value" .labels "context" $) | nindent 4 }}
    {{- end }}
    {{- if $.Values.generic.labels }}
    {{- include "helpers.tplvalues.render" (dict "value" $.Values.generic.labels "context" $) | nindent 4 }}
    {{- end }}
  annotations:
    {{- if .annotations }}
    {{- include "helpers.tplvalues.render" (dict "value" .annotations "context" $) | nindent 4 }}
    {{- end }}
    {{- if $.Values.generic.annotations }}
    {{- include "helpers.tplvalues.render" ( dict "value" $.Values.generic.annotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .replicas | default 1 }}
  {{- with .strategy }}
  strategy: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helpers.app.selectorLabels" $ | nindent 6 }}
      {{- if .extraSelectorLabels }}
      {{- include "helpers.tplvalues.render" (dict "value" .extraSelectorLabels "context" $) | nindent 6 }}
      {{- else if $.Values.generic.extraSelectorLabels }}
      {{- include "helpers.tplvalues.render" (dict "value" $.Values.generic.extraSelectorLabels "context" $) | nindent 6 }}
      {{- end }}
  template:
    metadata:
      labels:
        {{- include "helpers.app.selectorLabels" $ | nindent 8 }}
        {{- if .extraSelectorLabels }}
        {{- include "helpers.tplvalues.render" (dict "value" .extraSelectorLabels "context" $) | nindent 8 }}
        {{- else if $.Values.generic.extraSelectorLabels }}
        {{- include "helpers.tplvalues.render" (dict "value" $.Values.generic.extraSelectorLabels "context" $) | nindent 8 }}
        {{- end }}
        {{- if .podLabels }}
        {{- include "helpers.tplvalues.render" (dict "value" .podLabels "context" $) | nindent 8 }}
        {{- end }}
        {{- if $.Values.generic.podLabels }}
        {{- include "helpers.tplvalues.render" ( dict "value" $.Values.generic.podLabels "context" $ ) | nindent 8 }}
        {{- end }}
      annotations:
        {{- if $.Values.generic.podAnnotations }}
        {{- include "helpers.tplvalues.render" ( dict "value" $.Values.generic.podAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .podAnnotations }}
        {{- include "helpers.tplvalues.render" ( dict "value" .podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- if .serviceAccountName }}
      serviceAccountName: {{ .serviceAccountName }}
      {{- else if $.Values.generic.serviceAccountName }}
      serviceAccountName: {{ $.Values.generic.serviceAccountName }}
      {{- end }}
      {{- if .hostAliases }}
      hostAliases: {{- include "helpers.tplvalues.render" (dict "value" .hostAliases "context" $) | nindent 8 }}
      {{- else if $.Values.generic.hostAliases }}
      hostAliases: {{- include "helpers.tplvalues.render" (dict "value" $.Values.generic.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .affinity }}
      affinity:
        {{- include "helpers.tplvalues.render" ( dict "value" .affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        nodeAffinity: {{- include "helpers.affinities.nodes" (dict "type" $.Values.nodeAffinityPreset.type "key" $.Values.nodeAffinityPreset.key "values" $.Values.nodeAffinityPreset.values) | nindent 10 }}
        podAffinity: {{- include "helpers.affinities.pods" (dict "type" $.Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "helpers.affinities.pods" (dict "type" $.Values.podAntiAffinityPreset "context" $) | nindent 10 }}
      {{- end }}
      {{- if .dnsPolicy }}
      dnsPolicy: {{ .dnsPolicy }}
      {{- else if $.Values.generic.dnsPolicy }}
      dnsPolicy: {{ $.Values.generic.dnsPolicy }}
      {{- end }}
      {{- with .nodeSelector }}
      nodeSelector: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .podSecurityContext }}
      securityContext: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) nindent 8 }}
      {{- end }}
      {{ if or $.Values.generic.imagePullSecrets .imagePullSecrets }}
      imagePullSecrets:
        {{- range $sName, $v := $.Values.generic.imagePullSecrets }}
      - name: {{ $sName }}
        {{- end }}
        {{- if .imagePullSecrets }}
        {{- include "helpers.tplvalues.render" ( dict "value" .imagePullSecrets "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .initContainers}}
      initContainers:
      {{- range . }}
      - name: {{ .name }}
        image: {{ .image | default $.Values.generic.defaultImage }}:{{ .imageTag | default  $.Values.generic.defaultImageTag }}
        imagePullPolicy: {{ .imagePullPolicy | default "IfNotPresent" }}
        {{- with .containerSecurityContext }}
        securityContext: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .args }}
        args: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .command }}
        {{- if typeIs "string" . }}
        command: {{ printf "[\"%s\"]" (join ("\", \"") (without (splitList " " .) "" )) }}
        {{- else -}}
        command: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 12 }}
        {{- end }}
        {{- end }}
        env:
          {{- include "helpers.secrets.include" $ | nindent 10 }}
          {{- with .env }}
          {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
          {{- end }}
        {{- with .envFrom }}
        envFrom:
          {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .ports }}
        ports: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- $volMounts := list -}}
        {{- if .volumeMounts -}}{{- $volMounts = concat $volMounts .volumeMounts -}}{{- end }}
        {{- if $general.extraVolumeMounts -}}{{- $volMounts = concat $volMounts $general.extraVolumeMounts -}}{{- end }}
        {{- if $.Values.generic.extraVolumeMounts -}}{{- $volMounts = concat $volMounts $.Values.generic.extraVolumeMounts -}}{{- end -}}
        {{- if not (empty $volMounts) }}
        volumeMounts: {{- include "helpers.volumes.mount" (dict "mounts" $volMounts "context" $) | indent 8 }}
        {{- end }}
      {{- end }}{{- end }}
      {{- $containers := list -}}
      {{- if .containers -}}{{- $containers = .containers -}}{{- else -}}{{- $containers = append list . -}}{{- end }}
      containers:
      {{- range $containers }}
      - name: {{ .name | default "worker" }}
        image: {{ .image | default $.Values.generic.defaultImage }}:{{ .imageTag | default  $.Values.generic.defaultImageTag }}
        imagePullPolicy: {{ .imagePullPolicy | default "IfNotPresent" }}
        {{- with .containerSecurityContext }}
        securityContext: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .args }}
        args: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .command }}
        {{- if typeIs "string" . }}
        command: {{ printf "[\"%s\"]" (join ("\", \"") (without (splitList " " .) "" )) }}
        {{- else -}}
        command: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 12 }}
        {{- end }}
        {{- end }}
        env:
        {{- include "helpers.secrets.include" $ | nindent 10 }}
        {{- with .env }}
        {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .envFrom }}
        envFrom: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .ports }}
        ports: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .lifecycle }}
        lifecycle: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .livenessProbe }}
        livenessProbe: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .readinessProbe }}
        readinessProbe: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .resources }}
        resources: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- $volMounts := list -}}
        {{- if .volumeMounts -}}{{- $volMounts = concat $volMounts .volumeMounts -}}{{- end }}
        {{- if $general.extraVolumeMounts -}}{{- $volMounts = concat $volMounts $general.extraVolumeMounts -}}{{- end }}
        {{- if $.Values.generic.extraVolumeMounts -}}{{- $volMounts = concat $volMounts $.Values.generic.extraVolumeMounts -}}{{- end -}}
        {{- if not (empty $volMounts) }}
        volumeMounts: {{- include "helpers.volumes.mount" (dict "mounts" $volMounts "context" $) | indent 8 }}
        {{- end }}
      {{- end }}
      volumes:
      {{- if .volumes }}
      {{- include "helpers.volumes.typed" ( dict "volumes" .volumes "context" $) | indent 6}}
      {{- end }}
      {{- if .extraVolumes }}
      {{- include "helpers.tplvalues.render" ( dict "value" .extraVolumes "context" $) | nindent 6 }}
      {{- end }}{{- if $general.extraVolumes }}
      {{- include "helpers.tplvalues.render" ( dict "value" $general.extraVolumes "context" $) | nindent 6 }}
      {{- end }}{{- if $.Values.generic.extraVolumes }}
      {{- include "helpers.tplvalues.render" ( dict "value" $.Values.generic.extraVolumes "context" $) | nindent 6 }}
      {{- end }}
{{- end }}
{{- end }}
