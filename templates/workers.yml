{{- $workers := dict -}}
{{- if .Values.workers -}}
{{- if kindIs "string" .Values.workers -}}
{{- $workers = fromYaml .Values.workers -}}
{{- else if kindIs "map" .Values.workers -}}
{{- $workers = .Values.workers -}}
{{- end -}}
{{- else if .Values.workersFileName -}}
{{- $workers = fromYaml (.Files.Get .Values.workersFileName) -}}
{{- end -}}
{{- $general := $.Values.workersGeneral -}}
{{- range $workers.workers -}}
{{- if not (.disabled | default false) }}
---
apiVersion: {{ include "helpers.capabilities.deployment.apiVersion" $ }}
kind: Deployment
metadata:
  name: {{ include "helpers.app.fullname" (dict "name" .name "context" $) }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "helpers.app.labels" $ | nindent 4 }}
    {{- if .labels }}
    {{- include "helpers.tplvalues.render" (dict "value" .labels "context" $) | nindent 4 }}
    {{- end }}
    {{- if $.Values.global.labels }}
    {{- include "helpers.tplvalues.render" (dict "value" $.Values.global.labels "context" $) | nindent 4 }}
    {{- end }}
  annotations:
    {{- if .annotations }}
    {{- include "helpers.tplvalues.render" (dict "value" .annotations "context" $) | nindent 4 }}
    {{- end }}
    {{- if $.Values.global.annotations }}
    {{- include "helpers.tplvalues.render" ( dict "value" $.Values.global.annotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .replicas | default 1 }}
  {{- with .strategy }}
  strategy: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helpers.app.selectorLabels" $ | nindent 6 }}
      {{- if .extraSelectorLabels }}
      {{- include "helpers.tplvalues.render" (dict "value" .extraSelectorLabels "context" $) | nindent 6 }}
      {{- else if $.Values.global.extraSelectorLabels }}
      {{- include "helpers.tplvalues.render" (dict "value" $.Values.global.extraSelectorLabels "context" $) | nindent 6 }}
      {{- end }}
  template:
    metadata:
      labels:
        {{- include "helpers.app.selectorLabels" $ | nindent 8 }}
        {{- if .extraSelectorLabels }}
        {{- include "helpers.tplvalues.render" (dict "value" .extraSelectorLabels "context" $) | nindent 8 }}
        {{- else if $.Values.global.extraSelectorLabels }}
        {{- include "helpers.tplvalues.render" (dict "value" $.Values.global.extraSelectorLabels "context" $) | nindent 8 }}
        {{- end }}
        {{- if .podLabels }}
        {{- include "helpers.tplvalues.render" (dict "value" .podLabels "context" $) | nindent 8 }}
        {{- end }}
        {{- if $.Values.global.podLabels }}
        {{- include "helpers.tplvalues.render" ( dict "value" $.Values.global.podLabels "context" $ ) | nindent 8 }}
        {{- end }}
      annotations:
        {{- if $.Values.global.podAnnotations }}
        {{- include "helpers.tplvalues.render" ( dict "value" $.Values.global.podAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .podAnnotations }}
        {{- include "helpers.tplvalues.render" ( dict "value" .podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- if .serviceAccountName }}
      serviceAccountName: {{ .serviceAccountName }}
      {{- else if $.Values.global.serviceAccountName }}
      serviceAccountName: {{ $.Values.global.serviceAccountName }}
      {{- end }}
      {{- if .hostAliases }}
      hostAliases: {{- include "helpers.tplvalues.render" (dict "value" .hostAliases "context" $) | nindent 8 }}
      {{- else if $.Values.global.hostAliases }}
      hostAliases: {{- include "helpers.tplvalues.render" (dict "value" $.Values.global.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .affinity }}
      affinity:
        {{- include "helpers.tplvalues.render" ( dict "value" .affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        nodeAffinity: {{- include "helpers.affinities.nodes" (dict "type" $.Values.nodeAffinityPreset.type "key" $.Values.nodeAffinityPreset.key "values" $.Values.nodeAffinityPreset.values) | nindent 10 }}
        podAffinity: {{- include "helpers.affinities.pods" (dict "type" $.Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "helpers.affinities.pods" (dict "type" $.Values.podAntiAffinityPreset "context" $) | nindent 10 }}
      {{- end }}
      {{- if .dnsPolicy }}
      dnsPolicy: {{ .dnsPolicy }}
      {{- else if $.Values.global.dnsPolicy }}
      dnsPolicy: {{ $.Values.global.dnsPolicy }}
      {{- end }}
      {{- with .nodeSelector }}
      nodeSelector: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .podSecurityContext }}
      securityContext: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) nindent 8 }}
      {{- end }}
      {{- if .imagePullSecrets }}
      imagePullSecrets: {{- include "helpers.tplvalues.render" ( dict "value" .imagePullSecrets "context" $) | nindent 8 }}
      {{- else if $.Values.global.imagePullSecrets }}
      imagePullSecrets: {{- include "helpers.tplvalues.render" ( dict "value" $.Values.global.imagePullSecrets "context" $) | nindent 8 }}
      {{- end }}
      {{- with .terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .initContainers}}
      initContainers:
      {{- range . }}
      - name: {{ .name }}
        image: {{ .image | default $.Values.global.defaultImage }}:{{ .imageTag | default  $.Values.global.defaultImageTag }}
        imagePullPolicy: {{ .imagePullPolicy | default "IfNotPresent" }}
        {{- with .containerSecurityContext }}
        securityContext: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .args }}
        args: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .command }}
        {{- if typeIs "string" . }}
        command: {{ printf "[\"%s\"]" (join ("\", \"") (without (splitList " " .) "" )) }}
        {{- else -}}
        command: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 12 }}
        {{- end }}
        {{- end }}
        env:
          {{- include "helpers.secrets.include" $ | nindent 10 }}
          {{- with .env }}
          {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
          {{- end }}
        {{- with .envFrom }}
        envFrom:
          {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .ports }}
        ports: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- $volMounts := list -}}
        {{- if .volumeMounts -}}
        {{- $volMounts = .volumeMounts -}}
        {{- else if $general.extraVolumeMounts -}}
        {{- $volMounts = $general.extraVolumeMounts -}}
        {{- else if $.Values.global.extraVolumeMounts -}}
        {{- $volMounts = $.Values.global.extraVolumeMounts -}}
        {{- end }}
        volumeMounts:
        {{- range $volMounts }}
          {{- if .extraFilesDirName }}
        - name: {{ include "helpers.app.fullname" (dict "name" (.partOfName | replace "_" "-") "context" $) }}
          {{- else }}
        - name: {{ .name }}
          {{- end }}
          {{- with .subPath }}
          subPath: {{ include "helpers.tplvalues.render" ( dict "value" . "context" $) }}
          {{- end }}
          {{- with .subPathExpr }}
          subPathExpr: {{ include "helpers.tplvalues.render" ( dict "value" . "context" $) }}
          {{- end }}
          mountPath: {{ .mountPath }}
          {{- with .readOnly }}
          readOnly: {{ include "helpers.tplvalues.render" ( dict "value" . "context" $) }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- $containers := list -}}
      {{- if .containers -}}{{- $containers = .containers -}}{{- else -}}{{- $containers = append list . -}}{{- end }}
      containers:
      {{- range $containers }}
      - name: {{ .name | default "worker" }}
        image: {{ .image | default $.Values.global.defaultImage }}:{{ .imageTag | default  $.Values.global.defaultImageTag }}
        imagePullPolicy: {{ .imagePullPolicy | default "IfNotPresent" }}
        {{- with .containerSecurityContext }}
        securityContext: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .args }}
        args: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .command }}
        {{- if typeIs "string" . }}
        command: {{ printf "[\"%s\"]" (join ("\", \"") (without (splitList " " .) "" )) }}
        {{- else -}}
        command: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 12 }}
        {{- end }}
        {{- end }}
        env:
        {{- include "helpers.secrets.include" $ | nindent 10 }}
        {{- with .env }}
        {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .envFrom }}
        envFrom: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .ports }}
        ports: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .lifecycle }}
        lifecycle: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .livenessProbe }}
        livenessProbe: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .readinessProbe }}
        readinessProbe: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- with .resources }}
        resources: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- $volMounts := list -}}
        {{- if .volumeMounts -}}
        {{- $volMounts = .volumeMounts -}}
        {{- else if $general.extraVolumeMounts -}}
        {{- $volMounts = $general.extraVolumeMounts -}}
        {{- else if $.Values.global.extraVolumeMounts -}}
        {{- $volMounts = $.Values.global.extraVolumeMounts -}}
        {{- end }}
        volumeMounts:
        {{- range $volMounts }}
          {{- if .extraFilesDirName }}
        - name: {{ include "helpers.app.fullname" (dict "name" (.extraFilesDirName | replace "_" "-" | replace "." "-") "context" $) }}
          {{- else if .pvcName }}
        - name: {{ include "helpers.app.fullname" (dict "name" (.pvcName | replace "_" "-") "context" $) }}
          {{- else }}
        - name: {{ .name }}
          {{- end }}
          {{- with .subPath }}
          subPath: {{ include "helpers.tplvalues.render" ( dict "value" . "context" $) }}
          {{- end }}
          {{- with .subPathExpr }}
          subPathExpr: {{ include "helpers.tplvalues.render" ( dict "value" . "context" $) }}
          {{- end }}
          mountPath: {{ .mountPath }}
          {{- with .readOnly }}
          readOnly: {{ include "helpers.tplvalues.render" ( dict "value" . "context" $) }}
          {{- end }}
        {{- end }}
      {{- end }}
      volumes:
        {{- if $.Files.Glob ("extra-files/config/**") }}
        {{- range $subPath := splitList "$" (include "helpers.configFiles.subPaths" $)}}
        {{- $name := include "helpers.app.fullname" (dict "name" ($subPath | replace "_" "-" | replace "." "-") "context" $) }}
        - name: {{ $name }}
          configMap:
            name: {{ $name }}
        {{- end }}
        {{- end }}
        {{- if $.Files.Glob ("extra-files/secret/**") }}
        {{- range $subPath := splitList "$" (include "helpers.configFiles.subPaths" $)}}
        {{- $name := include "helpers.app.fullname" (dict "name" ($subPath | replace "_" "-" | replace "." "-") "context" $) }}
        - name: {{ $name }}
          secret:
            secretName: {{ $name }}
        {{- end }}
        {{- end }}
        {{- range .templatedVolumes }}
        {{- $volName := include "helpers.app.fullname" (dict "name" .name "context" $) -}}
        {{- if eq .type "configMap" }}
        - name: {{ $volName }}
          configMap:
            name: {{ $volName }}
        {{- end }}
        {{- if eq .type "secret" }}
        - name: {{ $volName }}
          secret:
            secretName: {{ $volName }}
        {{- end }}
        {{- end }}
        {{- range $.Values.pvcs }}
        {{- $claimName := "" -}}
        {{- if .nameOverride -}}{{- $claimName = .nameOverride -}}{{- else -}}{{- $claimName = include "helpers.app.fullname" (dict "name" .name "context" $) -}}{{- end }}
        - name: {{ $claimName }}
          persistentVolumeClaim:
            claimName: {{ $claimName }}
        {{- end }}
        {{- if .extraVolumes }}
        {{- include "helpers.tplvalues.render" ( dict "value" .extraVolumes "context" $) | nindent 8 }}
        {{- else if $general.extraVolumes }}
        {{- include "helpers.tplvalues.render" ( dict "value" $general.extraVolumes "context" $) | nindent 8 }}
        {{- else if $.Values.global.extraVolumes }}
        {{- include "helpers.tplvalues.render" ( dict "value" $.Values.global.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- end }}
{{- end }}
