{{/*Блок генерит секреты согласно данным из values.yml*/}}
{{- if .Values.generic.secretEnvs }}
---
kind: Secret
apiVersion: v1
type: Opaque
metadata:
  name: {{ .Release.Name }}-secret-envs
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "helpers.app.labels" $ | nindent 4 }}
    {{- if .Values.generic.labels }}
    {{- include "helpers.tplvalues.render" (dict "value" .Values.generic.labels "context" $) | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
    {{- if .Values.generic.secretEnvsAnnotations }}
    {{- include "helpers.tplvalues.render" (dict "value" .Values.generic.secretEnvsAnnotations "context" $) | nindent 4 }}
    {{- end }}
data:
  {{- include "helpers.secrets.render" (dict "value" .Values.generic.secretEnvs) | indent 2 }}
{{- end }}

{{- range $sName, $val := .Values.secrets }}
---
apiVersion: v1
kind: Secret
type: {{ .type | default  "Opaque" }}
metadata:
  name: {{ include "helpers.app.fullname" (dict "name" $sName "context" $) }}
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    {{- include "helpers.app.labels" $ | nindent 4 }}
    {{- if $val.labels }}
    {{- include "helpers.tplvalues.render" (dict "value" $val.labels "context" $) | nindent 4 }}
    {{- end }}
    {{- if $.Values.generic.labels }}
    {{- include "helpers.tplvalues.render" (dict "value" $.Values.generic.labels "context" $) | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
    {{- if $val.annotations }}
    {{- include "helpers.tplvalues.render" (dict "value" $val.annotations "context" $) | nindent 4 }}
    {{- end }}
data:
  {{- include "helpers.secrets.render" (dict "value" $val.data) | nindent 2 }}
{{- end }}

{{- range $name, $value := .Values.generic.imagePullSecrets }}
---
apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
metadata:
  name: {{ $name }}
  namespace: {{ $.Release.Namespace | quote }}
data:
  .dockerconfigjson: {{ $value }}
{{- end }}